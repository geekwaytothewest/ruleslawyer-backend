services:
  backend:
    profiles: ['backend', 'ruleslawyer', 'all']
    container_name: ruleslawyer-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
      - 9229:9229
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - NODE_ENV=development
    volumes:
      - .:/usr/src/app
    working_dir: /usr/src/app
    command: npm run start:migrate:seed:debug
    stdin_open: true
    tty: true

  admin:
    profiles: ['frontends', 'admin', 'all']
    container_name: ruleslawyer-admin
    build:
      context: ../frontends/board-game-admin
      dockerfile: Dockerfile
    ports:
      - 8081:80
    env_file:
      - ../frontends/board-game-admin/.env

  librarian:
    profiles: ['frontends', 'librarian', 'all']
    container_name: ruleslawyer-librarian
    build:
      context: ../frontends/librarian
      dockerfile: Dockerfile
    ports:
      - 8082:80
    env_file:
      - ../frontends/librarian/.env

  playandwin:
    profiles: ['frontends', 'playandwin', 'all']
    container_name: ruleslawyer-playandwin
    build:
      context: ../frontends/play-prize-entry
      dockerfile: Dockerfile
    ports:
      - 8083:80
    env_file:
      - ../frontends/play-prize-entry/.env

  frontend:
    profiles: ['frontend', 'ruleslawyer', 'all']
    container_name: ruleslawyer-frontend
    build:
      context: ../ruleslawyer-frontend
      dockerfile: Dockerfile
    ports:
      - 8084:3000
    env_file:
      - ../ruleslawyer-frontend/.env.production

  postgres:
    profiles: ['backend', 'db', 'ruleslawyer', 'all']
    image: postgres:14.9
    container_name: ruleslawyer-db
    restart: always
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U geekway']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres:
    name: ruleslawyer-db
